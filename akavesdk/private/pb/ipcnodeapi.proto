syntax = "proto3";

option go_package = "akave.ai/akave/private/pb";

import "google/protobuf/timestamp.proto";

package ipcnodeapi;

service IPCNodeAPI {
  rpc ConnectionParams (ConnectionParamsRequest) returns (ConnectionParamsResponse) {}
  // Bucket APIs.
  rpc BucketCreate (IPCBucketCreateRequest) returns (IPCBucketCreateResponse) {}
  rpc BucketView (IPCBucketViewRequest) returns (IPCBucketViewResponse) {}
  rpc BucketList (IPCBucketListRequest) returns (IPCBucketListResponse) {}
  rpc BucketDelete (IPCBucketDeleteRequest) returns (IPCBucketDeleteResponse) {}
  // File APIs.
  rpc FileUploadChunkCreate (IPCFileUploadChunkCreateRequest) returns (IPCFileUploadChunkCreateResponse) {}
  rpc FileUploadBlock (stream IPCFileBlockData) returns (IPCFileUploadBlockResponse) {}
  rpc FileView (IPCFileViewRequest) returns (IPCFileViewResponse) {}
  rpc FileDownloadCreate (IPCFileDownloadCreateRequest) returns (IPCFileDownloadCreateResponse) {}
  rpc FileDownloadChunkCreate (IPCFileDownloadChunkCreateRequest) returns (IPCFileDownloadChunkCreateResponse) {}
  rpc FileDownloadBlock (IPCFileDownloadBlockRequest) returns (stream IPCFileBlockData) {}
  rpc FileList (IPCFileListRequest) returns (IPCFileListResponse) {}
  rpc FileDelete (IPCFileDeleteRequest) returns (IPCFileDeleteResponse) {}
}

message ConnectionParamsRequest {}

message ConnectionParamsResponse {
  string dial_uri = 1;
  string contract_address = 2;
}

message IPCBucketCreateRequest {
  string name = 1;
}

message IPCBucketCreateResponse {
  string name = 1;
  google.protobuf.Timestamp created_at = 2;
}

message IPCBucketViewRequest {
  string name = 1;
  string address = 2;
}

message IPCBucketViewResponse {
  string id = 1; // todo: remove this when contract removes id from deleteBucket endpoint
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
}

message IPCBucketListRequest {
  string address = 1;
}

message IPCBucketListResponse {
  repeated IPCBucket buckets = 1;

  message IPCBucket {
    string name = 1;
    google.protobuf.Timestamp created_at = 2;
  }
}

message IPCBucketDeleteRequest {}

message IPCBucketDeleteResponse {}

message IPCChunk {
  string cid = 1;
  int64 index = 2;
  int64 size = 3;
  repeated Block blocks = 4;

  message Block {
    string cid = 1;
    int64 size = 2;
  }
}

message IPCFileUploadChunkCreateRequest{
  IPCChunk chunk = 1;
  bytes bucket_id = 2;
  string file_name = 3;
}

message IPCFileUploadChunkCreateResponse {
  repeated BlockUpload blocks = 1;

  message BlockUpload {
    string cid = 1;
    string node_address = 2;
    string node_id = 3;
    string permit = 4;
  }
}

message IPCFileBlockDataRequest {
  repeated bytes transaction = 1;
}

message IPCFileBlockData {
  bytes data = 1;
  string cid = 2; // only present in first msg of request stream
  int64 index = 3; // only present in first msg of request stream
  IPCChunk chunk = 4; // only present in first msg of request stream
  bytes bucket_id = 5;
  string file_name = 6;
}

message IPCFileUploadBlockResponse {}

message IPCFileViewRequest {
  string bucket_name = 1;
  string file_name = 2;
  string address = 3;
}

message IPCFileViewResponse {
  string bucket_name = 1;
  string file_name = 2;
  string root_cid = 3;
  int64 encoded_size = 4;
  google.protobuf.Timestamp created_at = 5;
}

message IPCFileDownloadCreateRequest {
  string bucket_name = 1;
  string file_name = 2;
  string address = 3;
}

message IPCFileDownloadCreateResponse {
  string bucket_name = 1;
  repeated Chunk chunks = 3;

  message Chunk {
    string cid = 1;
    int64 encoded_size = 2;
    int64 size = 3;
  }
}

message IPCFileDownloadChunkCreateRequest {
  string bucket_name = 1;
  string file_name = 2;
  string chunk_cid = 3;
  string address = 4;
}

message IPCFileDownloadChunkCreateResponse {
  repeated BlockDownload blocks = 1;

  message BlockDownload {
    string cid = 1;
    int64 size = 2;
    string node_address = 3;
    string node_id = 4;
    string permit = 5;
  }
}

message IPCFileDownloadBlockRequest {
  string chunk_cid = 1;
  int64 chunk_index = 2;
  string block_cid = 3;
  int64 block_index = 4;
  string bucket_name = 5;
  string file_name = 6;
  string address = 7;
}

message IPCFileListRequest {
  string bucket_name = 1;
  string address = 2;
}

message IPCFileListResponse {
  repeated IPCFile list = 1;

  message IPCFile {
    string root_cid = 1;
    string name = 2;
    int64 encoded_size = 3;
    google.protobuf.Timestamp created_at = 4;
  }
}

message IPCFileDeleteRequest{
  bytes transaction = 1;
  bytes bucket_name = 2;
  string name = 3;
}

message IPCFileDeleteResponse{}
