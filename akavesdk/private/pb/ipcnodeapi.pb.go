// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: ipcnodeapi.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionParamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectionParamsRequest) Reset() {
	*x = ConnectionParamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionParamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionParamsRequest) ProtoMessage() {}

func (x *ConnectionParamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionParamsRequest.ProtoReflect.Descriptor instead.
func (*ConnectionParamsRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{0}
}

type ConnectionParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DialUri         string `protobuf:"bytes,1,opt,name=dial_uri,json=dialUri,proto3" json:"dial_uri,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *ConnectionParamsResponse) Reset() {
	*x = ConnectionParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionParamsResponse) ProtoMessage() {}

func (x *ConnectionParamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionParamsResponse.ProtoReflect.Descriptor instead.
func (*ConnectionParamsResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionParamsResponse) GetDialUri() string {
	if x != nil {
		return x.DialUri
	}
	return ""
}

func (x *ConnectionParamsResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type IPCBucketCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IPCBucketCreateRequest) Reset() {
	*x = IPCBucketCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketCreateRequest) ProtoMessage() {}

func (x *IPCBucketCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketCreateRequest.ProtoReflect.Descriptor instead.
func (*IPCBucketCreateRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{2}
}

func (x *IPCBucketCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IPCBucketCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *IPCBucketCreateResponse) Reset() {
	*x = IPCBucketCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketCreateResponse) ProtoMessage() {}

func (x *IPCBucketCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketCreateResponse.ProtoReflect.Descriptor instead.
func (*IPCBucketCreateResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{3}
}

func (x *IPCBucketCreateResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPCBucketCreateResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IPCBucketViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCBucketViewRequest) Reset() {
	*x = IPCBucketViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketViewRequest) ProtoMessage() {}

func (x *IPCBucketViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketViewRequest.ProtoReflect.Descriptor instead.
func (*IPCBucketViewRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{4}
}

func (x *IPCBucketViewRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPCBucketViewRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCBucketViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // todo: remove this when contract removes id from deleteBucket endpoint
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *IPCBucketViewResponse) Reset() {
	*x = IPCBucketViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketViewResponse) ProtoMessage() {}

func (x *IPCBucketViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketViewResponse.ProtoReflect.Descriptor instead.
func (*IPCBucketViewResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{5}
}

func (x *IPCBucketViewResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IPCBucketViewResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPCBucketViewResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IPCBucketListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCBucketListRequest) Reset() {
	*x = IPCBucketListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketListRequest) ProtoMessage() {}

func (x *IPCBucketListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketListRequest.ProtoReflect.Descriptor instead.
func (*IPCBucketListRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{6}
}

func (x *IPCBucketListRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCBucketListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*IPCBucketListResponse_IPCBucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *IPCBucketListResponse) Reset() {
	*x = IPCBucketListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketListResponse) ProtoMessage() {}

func (x *IPCBucketListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketListResponse.ProtoReflect.Descriptor instead.
func (*IPCBucketListResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{7}
}

func (x *IPCBucketListResponse) GetBuckets() []*IPCBucketListResponse_IPCBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type IPCBucketDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPCBucketDeleteRequest) Reset() {
	*x = IPCBucketDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketDeleteRequest) ProtoMessage() {}

func (x *IPCBucketDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketDeleteRequest.ProtoReflect.Descriptor instead.
func (*IPCBucketDeleteRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{8}
}

type IPCBucketDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPCBucketDeleteResponse) Reset() {
	*x = IPCBucketDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketDeleteResponse) ProtoMessage() {}

func (x *IPCBucketDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketDeleteResponse.ProtoReflect.Descriptor instead.
func (*IPCBucketDeleteResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{9}
}

type IPCChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    string            `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Index  int64             `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Size   int64             `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Blocks []*IPCChunk_Block `protobuf:"bytes,4,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *IPCChunk) Reset() {
	*x = IPCChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCChunk) ProtoMessage() {}

func (x *IPCChunk) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCChunk.ProtoReflect.Descriptor instead.
func (*IPCChunk) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{10}
}

func (x *IPCChunk) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCChunk) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IPCChunk) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IPCChunk) GetBlocks() []*IPCChunk_Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type IPCFileUploadChunkCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk    *IPCChunk `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	BucketId []byte    `protobuf:"bytes,2,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	FileName string    `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *IPCFileUploadChunkCreateRequest) Reset() {
	*x = IPCFileUploadChunkCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileUploadChunkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileUploadChunkCreateRequest) ProtoMessage() {}

func (x *IPCFileUploadChunkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileUploadChunkCreateRequest.ProtoReflect.Descriptor instead.
func (*IPCFileUploadChunkCreateRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{11}
}

func (x *IPCFileUploadChunkCreateRequest) GetChunk() *IPCChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *IPCFileUploadChunkCreateRequest) GetBucketId() []byte {
	if x != nil {
		return x.BucketId
	}
	return nil
}

func (x *IPCFileUploadChunkCreateRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type IPCFileUploadChunkCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*IPCFileUploadChunkCreateResponse_BlockUpload `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *IPCFileUploadChunkCreateResponse) Reset() {
	*x = IPCFileUploadChunkCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileUploadChunkCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileUploadChunkCreateResponse) ProtoMessage() {}

func (x *IPCFileUploadChunkCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileUploadChunkCreateResponse.ProtoReflect.Descriptor instead.
func (*IPCFileUploadChunkCreateResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{12}
}

func (x *IPCFileUploadChunkCreateResponse) GetBlocks() []*IPCFileUploadChunkCreateResponse_BlockUpload {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type IPCFileBlockDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction [][]byte `protobuf:"bytes,1,rep,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *IPCFileBlockDataRequest) Reset() {
	*x = IPCFileBlockDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileBlockDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileBlockDataRequest) ProtoMessage() {}

func (x *IPCFileBlockDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileBlockDataRequest.ProtoReflect.Descriptor instead.
func (*IPCFileBlockDataRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{13}
}

func (x *IPCFileBlockDataRequest) GetTransaction() [][]byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type IPCFileBlockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data     []byte    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Cid      string    `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`      // only present in first msg of request stream
	Index    int64     `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"` // only present in first msg of request stream
	Chunk    *IPCChunk `protobuf:"bytes,4,opt,name=chunk,proto3" json:"chunk,omitempty"`  // only present in first msg of request stream
	BucketId []byte    `protobuf:"bytes,5,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	FileName string    `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *IPCFileBlockData) Reset() {
	*x = IPCFileBlockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileBlockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileBlockData) ProtoMessage() {}

func (x *IPCFileBlockData) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileBlockData.ProtoReflect.Descriptor instead.
func (*IPCFileBlockData) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{14}
}

func (x *IPCFileBlockData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IPCFileBlockData) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCFileBlockData) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IPCFileBlockData) GetChunk() *IPCChunk {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *IPCFileBlockData) GetBucketId() []byte {
	if x != nil {
		return x.BucketId
	}
	return nil
}

func (x *IPCFileBlockData) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type IPCFileUploadBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPCFileUploadBlockResponse) Reset() {
	*x = IPCFileUploadBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileUploadBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileUploadBlockResponse) ProtoMessage() {}

func (x *IPCFileUploadBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileUploadBlockResponse.ProtoReflect.Descriptor instead.
func (*IPCFileUploadBlockResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{15}
}

type IPCFileViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCFileViewRequest) Reset() {
	*x = IPCFileViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileViewRequest) ProtoMessage() {}

func (x *IPCFileViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileViewRequest.ProtoReflect.Descriptor instead.
func (*IPCFileViewRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{16}
}

func (x *IPCFileViewRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileViewRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IPCFileViewRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCFileViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName  string                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FileName    string                 `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	RootCid     string                 `protobuf:"bytes,3,opt,name=root_cid,json=rootCid,proto3" json:"root_cid,omitempty"`
	EncodedSize int64                  `protobuf:"varint,4,opt,name=encoded_size,json=encodedSize,proto3" json:"encoded_size,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *IPCFileViewResponse) Reset() {
	*x = IPCFileViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileViewResponse) ProtoMessage() {}

func (x *IPCFileViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileViewResponse.ProtoReflect.Descriptor instead.
func (*IPCFileViewResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{17}
}

func (x *IPCFileViewResponse) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileViewResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IPCFileViewResponse) GetRootCid() string {
	if x != nil {
		return x.RootCid
	}
	return ""
}

func (x *IPCFileViewResponse) GetEncodedSize() int64 {
	if x != nil {
		return x.EncodedSize
	}
	return 0
}

func (x *IPCFileViewResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IPCFileDownloadCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCFileDownloadCreateRequest) Reset() {
	*x = IPCFileDownloadCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadCreateRequest) ProtoMessage() {}

func (x *IPCFileDownloadCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadCreateRequest.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadCreateRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{18}
}

func (x *IPCFileDownloadCreateRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileDownloadCreateRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IPCFileDownloadCreateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCFileDownloadCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string                                 `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Chunks     []*IPCFileDownloadCreateResponse_Chunk `protobuf:"bytes,3,rep,name=chunks,proto3" json:"chunks,omitempty"`
}

func (x *IPCFileDownloadCreateResponse) Reset() {
	*x = IPCFileDownloadCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadCreateResponse) ProtoMessage() {}

func (x *IPCFileDownloadCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadCreateResponse.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadCreateResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{19}
}

func (x *IPCFileDownloadCreateResponse) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileDownloadCreateResponse) GetChunks() []*IPCFileDownloadCreateResponse_Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

type IPCFileDownloadChunkCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FileName   string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	ChunkCid   string `protobuf:"bytes,3,opt,name=chunk_cid,json=chunkCid,proto3" json:"chunk_cid,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCFileDownloadChunkCreateRequest) Reset() {
	*x = IPCFileDownloadChunkCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadChunkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadChunkCreateRequest) ProtoMessage() {}

func (x *IPCFileDownloadChunkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadChunkCreateRequest.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadChunkCreateRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{20}
}

func (x *IPCFileDownloadChunkCreateRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateRequest) GetChunkCid() string {
	if x != nil {
		return x.ChunkCid
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCFileDownloadChunkCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*IPCFileDownloadChunkCreateResponse_BlockDownload `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *IPCFileDownloadChunkCreateResponse) Reset() {
	*x = IPCFileDownloadChunkCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadChunkCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadChunkCreateResponse) ProtoMessage() {}

func (x *IPCFileDownloadChunkCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadChunkCreateResponse.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadChunkCreateResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{21}
}

func (x *IPCFileDownloadChunkCreateResponse) GetBlocks() []*IPCFileDownloadChunkCreateResponse_BlockDownload {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type IPCFileDownloadBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkCid   string `protobuf:"bytes,1,opt,name=chunk_cid,json=chunkCid,proto3" json:"chunk_cid,omitempty"`
	ChunkIndex int64  `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	BlockCid   string `protobuf:"bytes,3,opt,name=block_cid,json=blockCid,proto3" json:"block_cid,omitempty"`
	BlockIndex int64  `protobuf:"varint,4,opt,name=block_index,json=blockIndex,proto3" json:"block_index,omitempty"`
	BucketName string `protobuf:"bytes,5,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	FileName   string `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Address    string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCFileDownloadBlockRequest) Reset() {
	*x = IPCFileDownloadBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadBlockRequest) ProtoMessage() {}

func (x *IPCFileDownloadBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadBlockRequest.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadBlockRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{22}
}

func (x *IPCFileDownloadBlockRequest) GetChunkCid() string {
	if x != nil {
		return x.ChunkCid
	}
	return ""
}

func (x *IPCFileDownloadBlockRequest) GetChunkIndex() int64 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *IPCFileDownloadBlockRequest) GetBlockCid() string {
	if x != nil {
		return x.BlockCid
	}
	return ""
}

func (x *IPCFileDownloadBlockRequest) GetBlockIndex() int64 {
	if x != nil {
		return x.BlockIndex
	}
	return 0
}

func (x *IPCFileDownloadBlockRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileDownloadBlockRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IPCFileDownloadBlockRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCFileListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BucketName string `protobuf:"bytes,1,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Address    string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *IPCFileListRequest) Reset() {
	*x = IPCFileListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileListRequest) ProtoMessage() {}

func (x *IPCFileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileListRequest.ProtoReflect.Descriptor instead.
func (*IPCFileListRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{23}
}

func (x *IPCFileListRequest) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *IPCFileListRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type IPCFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*IPCFileListResponse_IPCFile `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *IPCFileListResponse) Reset() {
	*x = IPCFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileListResponse) ProtoMessage() {}

func (x *IPCFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileListResponse.ProtoReflect.Descriptor instead.
func (*IPCFileListResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{24}
}

func (x *IPCFileListResponse) GetList() []*IPCFileListResponse_IPCFile {
	if x != nil {
		return x.List
	}
	return nil
}

type IPCFileDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction []byte `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	BucketName  []byte `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *IPCFileDeleteRequest) Reset() {
	*x = IPCFileDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDeleteRequest) ProtoMessage() {}

func (x *IPCFileDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDeleteRequest.ProtoReflect.Descriptor instead.
func (*IPCFileDeleteRequest) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{25}
}

func (x *IPCFileDeleteRequest) GetTransaction() []byte {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *IPCFileDeleteRequest) GetBucketName() []byte {
	if x != nil {
		return x.BucketName
	}
	return nil
}

func (x *IPCFileDeleteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type IPCFileDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IPCFileDeleteResponse) Reset() {
	*x = IPCFileDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDeleteResponse) ProtoMessage() {}

func (x *IPCFileDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDeleteResponse.ProtoReflect.Descriptor instead.
func (*IPCFileDeleteResponse) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{26}
}

type IPCBucketListResponse_IPCBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *IPCBucketListResponse_IPCBucket) Reset() {
	*x = IPCBucketListResponse_IPCBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCBucketListResponse_IPCBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCBucketListResponse_IPCBucket) ProtoMessage() {}

func (x *IPCBucketListResponse_IPCBucket) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCBucketListResponse_IPCBucket.ProtoReflect.Descriptor instead.
func (*IPCBucketListResponse_IPCBucket) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{7, 0}
}

func (x *IPCBucketListResponse_IPCBucket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPCBucketListResponse_IPCBucket) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type IPCChunk_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid  string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Size int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IPCChunk_Block) Reset() {
	*x = IPCChunk_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCChunk_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCChunk_Block) ProtoMessage() {}

func (x *IPCChunk_Block) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCChunk_Block.ProtoReflect.Descriptor instead.
func (*IPCChunk_Block) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{10, 0}
}

func (x *IPCChunk_Block) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCChunk_Block) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IPCFileUploadChunkCreateResponse_BlockUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	NodeAddress string `protobuf:"bytes,2,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	NodeId      string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Permit      string `protobuf:"bytes,4,opt,name=permit,proto3" json:"permit,omitempty"`
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) Reset() {
	*x = IPCFileUploadChunkCreateResponse_BlockUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileUploadChunkCreateResponse_BlockUpload) ProtoMessage() {}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileUploadChunkCreateResponse_BlockUpload.ProtoReflect.Descriptor instead.
func (*IPCFileUploadChunkCreateResponse_BlockUpload) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{12, 0}
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *IPCFileUploadChunkCreateResponse_BlockUpload) GetPermit() string {
	if x != nil {
		return x.Permit
	}
	return ""
}

type IPCFileDownloadCreateResponse_Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	EncodedSize int64  `protobuf:"varint,2,opt,name=encoded_size,json=encodedSize,proto3" json:"encoded_size,omitempty"`
	Size        int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *IPCFileDownloadCreateResponse_Chunk) Reset() {
	*x = IPCFileDownloadCreateResponse_Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadCreateResponse_Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadCreateResponse_Chunk) ProtoMessage() {}

func (x *IPCFileDownloadCreateResponse_Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadCreateResponse_Chunk.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadCreateResponse_Chunk) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{19, 0}
}

func (x *IPCFileDownloadCreateResponse_Chunk) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCFileDownloadCreateResponse_Chunk) GetEncodedSize() int64 {
	if x != nil {
		return x.EncodedSize
	}
	return 0
}

func (x *IPCFileDownloadCreateResponse_Chunk) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type IPCFileDownloadChunkCreateResponse_BlockDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Size        int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	NodeAddress string `protobuf:"bytes,3,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	NodeId      string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Permit      string `protobuf:"bytes,5,opt,name=permit,proto3" json:"permit,omitempty"`
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) Reset() {
	*x = IPCFileDownloadChunkCreateResponse_BlockDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileDownloadChunkCreateResponse_BlockDownload) ProtoMessage() {}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileDownloadChunkCreateResponse_BlockDownload.ProtoReflect.Descriptor instead.
func (*IPCFileDownloadChunkCreateResponse_BlockDownload) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{21, 0}
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *IPCFileDownloadChunkCreateResponse_BlockDownload) GetPermit() string {
	if x != nil {
		return x.Permit
	}
	return ""
}

type IPCFileListResponse_IPCFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootCid     string                 `protobuf:"bytes,1,opt,name=root_cid,json=rootCid,proto3" json:"root_cid,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EncodedSize int64                  `protobuf:"varint,3,opt,name=encoded_size,json=encodedSize,proto3" json:"encoded_size,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *IPCFileListResponse_IPCFile) Reset() {
	*x = IPCFileListResponse_IPCFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipcnodeapi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPCFileListResponse_IPCFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPCFileListResponse_IPCFile) ProtoMessage() {}

func (x *IPCFileListResponse_IPCFile) ProtoReflect() protoreflect.Message {
	mi := &file_ipcnodeapi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPCFileListResponse_IPCFile.ProtoReflect.Descriptor instead.
func (*IPCFileListResponse_IPCFile) Descriptor() ([]byte, []int) {
	return file_ipcnodeapi_proto_rawDescGZIP(), []int{24, 0}
}

func (x *IPCFileListResponse_IPCFile) GetRootCid() string {
	if x != nil {
		return x.RootCid
	}
	return ""
}

func (x *IPCFileListResponse_IPCFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPCFileListResponse_IPCFile) GetEncodedSize() int64 {
	if x != nil {
		return x.EncodedSize
	}
	return 0
}

func (x *IPCFileListResponse_IPCFile) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_ipcnodeapi_proto protoreflect.FileDescriptor

var file_ipcnodeapi_proto_rawDesc = []byte{
	0x0a, 0x10, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x18, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6c, 0x55, 0x72,
	0x69, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x16,
	0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x17, 0x49, 0x50,
	0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x15, 0x49, 0x50,
	0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x15, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x1a, 0x5a, 0x0a, 0x09, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x18, 0x0a, 0x16, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x49,
	0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x08, 0x49, 0x50, 0x43, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x32, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x1a, 0x2d, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1f, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe9, 0x01, 0x0a,
	0x20, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x1a, 0x73, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x22, 0x3b, 0x0a, 0x17, 0x49, 0x50, 0x43, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a,
	0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x12, 0x49, 0x50,
	0x43, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x49, 0x50, 0x43,
	0x46, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x76, 0x0a, 0x1c, 0x49, 0x50, 0x43, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0xdb, 0x01, 0x0a, 0x1d, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x1a, 0x50, 0x0a, 0x05, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x98, 0x01,
	0x0a, 0x21, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x22, 0x49, 0x50, 0x43,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x89, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x74, 0x22, 0xf1, 0x01, 0x0a, 0x1b, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4f, 0x0a, 0x12, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x49, 0x50, 0x43, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69,
	0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x50,
	0x43, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x96, 0x01, 0x0a, 0x07,
	0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x43,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x6d, 0x0a, 0x14, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdc, 0x09, 0x0a,
	0x0a, 0x49, 0x50, 0x43, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x50, 0x49, 0x12, 0x5f, 0x0a, 0x10, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x23, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x69,
	0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50,
	0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x20, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64,
	0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x69, 0x70, 0x63,
	0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69,
	0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x22, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x15,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x26, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x4d, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x69, 0x70,
	0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x70,
	0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x17, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x2e, 0x69,
	0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c,
	0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x70, 0x63, 0x6e, 0x6f, 0x64, 0x65,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x50, 0x43, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1b, 0x5a, 0x19, 0x61,
	0x6b, 0x61, 0x76, 0x65, 0x2e, 0x61, 0x69, 0x2f, 0x61, 0x6b, 0x61, 0x76, 0x65, 0x2f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipcnodeapi_proto_rawDescOnce sync.Once
	file_ipcnodeapi_proto_rawDescData = file_ipcnodeapi_proto_rawDesc
)

func file_ipcnodeapi_proto_rawDescGZIP() []byte {
	file_ipcnodeapi_proto_rawDescOnce.Do(func() {
		file_ipcnodeapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipcnodeapi_proto_rawDescData)
	})
	return file_ipcnodeapi_proto_rawDescData
}

var file_ipcnodeapi_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_ipcnodeapi_proto_goTypes = []any{
	(*ConnectionParamsRequest)(nil),                          // 0: ipcnodeapi.ConnectionParamsRequest
	(*ConnectionParamsResponse)(nil),                         // 1: ipcnodeapi.ConnectionParamsResponse
	(*IPCBucketCreateRequest)(nil),                           // 2: ipcnodeapi.IPCBucketCreateRequest
	(*IPCBucketCreateResponse)(nil),                          // 3: ipcnodeapi.IPCBucketCreateResponse
	(*IPCBucketViewRequest)(nil),                             // 4: ipcnodeapi.IPCBucketViewRequest
	(*IPCBucketViewResponse)(nil),                            // 5: ipcnodeapi.IPCBucketViewResponse
	(*IPCBucketListRequest)(nil),                             // 6: ipcnodeapi.IPCBucketListRequest
	(*IPCBucketListResponse)(nil),                            // 7: ipcnodeapi.IPCBucketListResponse
	(*IPCBucketDeleteRequest)(nil),                           // 8: ipcnodeapi.IPCBucketDeleteRequest
	(*IPCBucketDeleteResponse)(nil),                          // 9: ipcnodeapi.IPCBucketDeleteResponse
	(*IPCChunk)(nil),                                         // 10: ipcnodeapi.IPCChunk
	(*IPCFileUploadChunkCreateRequest)(nil),                  // 11: ipcnodeapi.IPCFileUploadChunkCreateRequest
	(*IPCFileUploadChunkCreateResponse)(nil),                 // 12: ipcnodeapi.IPCFileUploadChunkCreateResponse
	(*IPCFileBlockDataRequest)(nil),                          // 13: ipcnodeapi.IPCFileBlockDataRequest
	(*IPCFileBlockData)(nil),                                 // 14: ipcnodeapi.IPCFileBlockData
	(*IPCFileUploadBlockResponse)(nil),                       // 15: ipcnodeapi.IPCFileUploadBlockResponse
	(*IPCFileViewRequest)(nil),                               // 16: ipcnodeapi.IPCFileViewRequest
	(*IPCFileViewResponse)(nil),                              // 17: ipcnodeapi.IPCFileViewResponse
	(*IPCFileDownloadCreateRequest)(nil),                     // 18: ipcnodeapi.IPCFileDownloadCreateRequest
	(*IPCFileDownloadCreateResponse)(nil),                    // 19: ipcnodeapi.IPCFileDownloadCreateResponse
	(*IPCFileDownloadChunkCreateRequest)(nil),                // 20: ipcnodeapi.IPCFileDownloadChunkCreateRequest
	(*IPCFileDownloadChunkCreateResponse)(nil),               // 21: ipcnodeapi.IPCFileDownloadChunkCreateResponse
	(*IPCFileDownloadBlockRequest)(nil),                      // 22: ipcnodeapi.IPCFileDownloadBlockRequest
	(*IPCFileListRequest)(nil),                               // 23: ipcnodeapi.IPCFileListRequest
	(*IPCFileListResponse)(nil),                              // 24: ipcnodeapi.IPCFileListResponse
	(*IPCFileDeleteRequest)(nil),                             // 25: ipcnodeapi.IPCFileDeleteRequest
	(*IPCFileDeleteResponse)(nil),                            // 26: ipcnodeapi.IPCFileDeleteResponse
	(*IPCBucketListResponse_IPCBucket)(nil),                  // 27: ipcnodeapi.IPCBucketListResponse.IPCBucket
	(*IPCChunk_Block)(nil),                                   // 28: ipcnodeapi.IPCChunk.Block
	(*IPCFileUploadChunkCreateResponse_BlockUpload)(nil),     // 29: ipcnodeapi.IPCFileUploadChunkCreateResponse.BlockUpload
	(*IPCFileDownloadCreateResponse_Chunk)(nil),              // 30: ipcnodeapi.IPCFileDownloadCreateResponse.Chunk
	(*IPCFileDownloadChunkCreateResponse_BlockDownload)(nil), // 31: ipcnodeapi.IPCFileDownloadChunkCreateResponse.BlockDownload
	(*IPCFileListResponse_IPCFile)(nil),                      // 32: ipcnodeapi.IPCFileListResponse.IPCFile
	(*timestamppb.Timestamp)(nil),                            // 33: google.protobuf.Timestamp
}
var file_ipcnodeapi_proto_depIdxs = []int32{
	33, // 0: ipcnodeapi.IPCBucketCreateResponse.created_at:type_name -> google.protobuf.Timestamp
	33, // 1: ipcnodeapi.IPCBucketViewResponse.created_at:type_name -> google.protobuf.Timestamp
	27, // 2: ipcnodeapi.IPCBucketListResponse.buckets:type_name -> ipcnodeapi.IPCBucketListResponse.IPCBucket
	28, // 3: ipcnodeapi.IPCChunk.blocks:type_name -> ipcnodeapi.IPCChunk.Block
	10, // 4: ipcnodeapi.IPCFileUploadChunkCreateRequest.chunk:type_name -> ipcnodeapi.IPCChunk
	29, // 5: ipcnodeapi.IPCFileUploadChunkCreateResponse.blocks:type_name -> ipcnodeapi.IPCFileUploadChunkCreateResponse.BlockUpload
	10, // 6: ipcnodeapi.IPCFileBlockData.chunk:type_name -> ipcnodeapi.IPCChunk
	33, // 7: ipcnodeapi.IPCFileViewResponse.created_at:type_name -> google.protobuf.Timestamp
	30, // 8: ipcnodeapi.IPCFileDownloadCreateResponse.chunks:type_name -> ipcnodeapi.IPCFileDownloadCreateResponse.Chunk
	31, // 9: ipcnodeapi.IPCFileDownloadChunkCreateResponse.blocks:type_name -> ipcnodeapi.IPCFileDownloadChunkCreateResponse.BlockDownload
	32, // 10: ipcnodeapi.IPCFileListResponse.list:type_name -> ipcnodeapi.IPCFileListResponse.IPCFile
	33, // 11: ipcnodeapi.IPCBucketListResponse.IPCBucket.created_at:type_name -> google.protobuf.Timestamp
	33, // 12: ipcnodeapi.IPCFileListResponse.IPCFile.created_at:type_name -> google.protobuf.Timestamp
	0,  // 13: ipcnodeapi.IPCNodeAPI.ConnectionParams:input_type -> ipcnodeapi.ConnectionParamsRequest
	2,  // 14: ipcnodeapi.IPCNodeAPI.BucketCreate:input_type -> ipcnodeapi.IPCBucketCreateRequest
	4,  // 15: ipcnodeapi.IPCNodeAPI.BucketView:input_type -> ipcnodeapi.IPCBucketViewRequest
	6,  // 16: ipcnodeapi.IPCNodeAPI.BucketList:input_type -> ipcnodeapi.IPCBucketListRequest
	8,  // 17: ipcnodeapi.IPCNodeAPI.BucketDelete:input_type -> ipcnodeapi.IPCBucketDeleteRequest
	11, // 18: ipcnodeapi.IPCNodeAPI.FileUploadChunkCreate:input_type -> ipcnodeapi.IPCFileUploadChunkCreateRequest
	14, // 19: ipcnodeapi.IPCNodeAPI.FileUploadBlock:input_type -> ipcnodeapi.IPCFileBlockData
	16, // 20: ipcnodeapi.IPCNodeAPI.FileView:input_type -> ipcnodeapi.IPCFileViewRequest
	18, // 21: ipcnodeapi.IPCNodeAPI.FileDownloadCreate:input_type -> ipcnodeapi.IPCFileDownloadCreateRequest
	20, // 22: ipcnodeapi.IPCNodeAPI.FileDownloadChunkCreate:input_type -> ipcnodeapi.IPCFileDownloadChunkCreateRequest
	22, // 23: ipcnodeapi.IPCNodeAPI.FileDownloadBlock:input_type -> ipcnodeapi.IPCFileDownloadBlockRequest
	23, // 24: ipcnodeapi.IPCNodeAPI.FileList:input_type -> ipcnodeapi.IPCFileListRequest
	25, // 25: ipcnodeapi.IPCNodeAPI.FileDelete:input_type -> ipcnodeapi.IPCFileDeleteRequest
	1,  // 26: ipcnodeapi.IPCNodeAPI.ConnectionParams:output_type -> ipcnodeapi.ConnectionParamsResponse
	3,  // 27: ipcnodeapi.IPCNodeAPI.BucketCreate:output_type -> ipcnodeapi.IPCBucketCreateResponse
	5,  // 28: ipcnodeapi.IPCNodeAPI.BucketView:output_type -> ipcnodeapi.IPCBucketViewResponse
	7,  // 29: ipcnodeapi.IPCNodeAPI.BucketList:output_type -> ipcnodeapi.IPCBucketListResponse
	9,  // 30: ipcnodeapi.IPCNodeAPI.BucketDelete:output_type -> ipcnodeapi.IPCBucketDeleteResponse
	12, // 31: ipcnodeapi.IPCNodeAPI.FileUploadChunkCreate:output_type -> ipcnodeapi.IPCFileUploadChunkCreateResponse
	15, // 32: ipcnodeapi.IPCNodeAPI.FileUploadBlock:output_type -> ipcnodeapi.IPCFileUploadBlockResponse
	17, // 33: ipcnodeapi.IPCNodeAPI.FileView:output_type -> ipcnodeapi.IPCFileViewResponse
	19, // 34: ipcnodeapi.IPCNodeAPI.FileDownloadCreate:output_type -> ipcnodeapi.IPCFileDownloadCreateResponse
	21, // 35: ipcnodeapi.IPCNodeAPI.FileDownloadChunkCreate:output_type -> ipcnodeapi.IPCFileDownloadChunkCreateResponse
	14, // 36: ipcnodeapi.IPCNodeAPI.FileDownloadBlock:output_type -> ipcnodeapi.IPCFileBlockData
	24, // 37: ipcnodeapi.IPCNodeAPI.FileList:output_type -> ipcnodeapi.IPCFileListResponse
	26, // 38: ipcnodeapi.IPCNodeAPI.FileDelete:output_type -> ipcnodeapi.IPCFileDeleteResponse
	26, // [26:39] is the sub-list for method output_type
	13, // [13:26] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_ipcnodeapi_proto_init() }
func file_ipcnodeapi_proto_init() {
	if File_ipcnodeapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipcnodeapi_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectionParamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectionParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*IPCChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileUploadChunkCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileUploadChunkCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileBlockDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileBlockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileUploadBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadChunkCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadChunkCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*IPCBucketListResponse_IPCBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*IPCChunk_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileUploadChunkCreateResponse_BlockUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadCreateResponse_Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileDownloadChunkCreateResponse_BlockDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipcnodeapi_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*IPCFileListResponse_IPCFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipcnodeapi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ipcnodeapi_proto_goTypes,
		DependencyIndexes: file_ipcnodeapi_proto_depIdxs,
		MessageInfos:      file_ipcnodeapi_proto_msgTypes,
	}.Build()
	File_ipcnodeapi_proto = out.File
	file_ipcnodeapi_proto_rawDesc = nil
	file_ipcnodeapi_proto_goTypes = nil
	file_ipcnodeapi_proto_depIdxs = nil
}
